basePath: /api
definitions:
  models.Image:
    properties:
      imageId:
        type: string
      name:
        type: string
      uploaded:
        type: string
    type: object
  models.LoginCredentials:
    properties:
      email:
        example: test@testit.example
        type: string
      password:
        example: Secure4Life!;)
        type: string
    required:
    - email
    - password
    type: object
  models.RegisterInformation:
    properties:
      email:
        example: test@testit.example
        type: string
      name:
        example: Max Mustermann
        type: string
      password:
        example: Secure4Life!;)
        type: string
    required:
    - email
    - name
    - password
    type: object
host: imgprocessing.pesc.xyz
info:
  contact:
    name: API Support
    url: https://github.com/imgProcessing/backend/issues
  description: Convert images on the fly
  license:
    name: Apache 2.0
    url: https://github.com/imgProcessing/backend/blob/main/LICENSE
  termsOfService: https://github.com/imgProcessing/backend/blob/main/LICENSE
  title: Image Procsessing API
  version: "1.0"
paths:
  /auth/images:
    get:
      consumes:
      - application/json
      description: List all the images of an organization
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Image'
      security:
      - jwtAuth: []
      summary: List all organization images
      tags:
      - Images
  /login:
    post:
      consumes:
      - application/json
      description: Verify User Credentials returning a JSON Web Token
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: body
      summary: Generate JWT
      tags:
      - Authorization
  /register:
    post:
      consumes:
      - application/json
      description: Register a User with an name, email, password
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterInformation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: test
      summary: Register
      tags:
      - Authorization
securityDefinitions:
  jwtAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
